--CREATE tables
CREATE TABLE Orders(
ID int IDENTITY(1,1)  PRIMARY key,
ProductID int not null,
CustomerID int not NULL
);
GO

CREATE TABLE Customers(
ID int IDENTITY(1,1)  PRIMARY key,
FirstName VARCHAR(50) not NULL,
LastName VARCHAR(50) not NULL,
CardNumber int 
);
GO

CREATE TABLE Products(
ID int IDENTITY(1,1) PRIMARY key,
name VARCHAR(50) not null,
 Price money not null,
);
GO

--add at least 3 records into each table
insert into Products( name, Price)
VALUES('Galaxy 10',300),
('Solo Beats',100),
('OnePlus 6',90)

 select * from [Products]

 insert into Customers( FirstName, LastName, CardNumber)
VALUES('Tiffy','Wes', 987654321),
('Sam','Jackson', 989054321),
('Oprah','Winfrey', 987654312)


 select * from [Customers]

insert into Orders( ProductID, CustomerID)
VALUES(1,2),
(2,3),
(3,1)

  select * from [Orders]


-- add product iPhone priced at $200.

insert into Products( name, Price)
VALUES('iPhone',200)

  --add customer Tina Smith
  insert into Customers( FirstName, LastName, CardNumber)
VALUES('Tina','Smith', 987653421)

select * from Customers

--create order for Tina Smith bought an iPhone
insert into Orders( ProductID, CustomerID)
VALUES(4,4)

--report all orders by Tina Smith
SELECT c.ID, c.FirstName, c.LastName, o.ProductID
from Customers as c
INNER join Orders as o
on c.ID= o.CustomerID
WHERE c.ID =4

--report all revenue generated by sales of iPhone
select p.name, p.Price, o.ID , o.ProductID
from [Orders] as o
right JOIN Products as p
on o.ID = p.ID
where o.ID = 4

--increase the price of iPhone to $250
UPDATE Products SET Products.Price = 250 WHERE Products.id = 4

select * from [Products]